---
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
let { slug } = Astro.params;

export async function getStaticPaths() {
  let data_sheets = await fetch(
    "https://docs.google.com/spreadsheets/d/1iO9LJBg739viwl7r_Pscbw9jrAl9U3k48KL6nFfNQ2M/export?format=csv"
  );
  let data = await data_sheets.text();
  //csv to json
  let drive_doc_ids = data.split("\n").map((line) => {
    let [Name, user_friendly_slug, description, uri] = line.split(",");
    // uri = uri.replace("\r", "");
    return { Name, user_friendly_slug, description, uri };
  });

  //check the slug and if it matches the slug in the google doc, then return the content
  let pages: any = [];
  for (let i = 1; i < drive_doc_ids.length; i++) {
    let data_doc = await fetch(`${drive_doc_ids[i].uri}/export`);
    console.log(data_doc);

    let data2 = await data_doc.text();
    let page_info = {
      params: { slug: drive_doc_ids[i].user_friendly_slug },
      props: {
        title: drive_doc_ids[i].Name,
        content: data2,
        description: drive_doc_ids[i].description,
      },
    };
    pages.push(page_info);
  }
  return pages;
}
const { content, title, date, description } = Astro.props;
---

<StarlightPage
  frontmatter={{
    title: title,
    description: description,
    tableOfContents: false,
  }}
>
  <article class="[&_*]:dark:!text-gray-300" set:html={content} />
</StarlightPage>

<style>
  @media (prefers-color-scheme: dark) {
    #_top {
      color: #e2e8f0 !important;
    }
  }
</style>
